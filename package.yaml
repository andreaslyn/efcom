name:                efcom
version:             0.1.0.0
github:              "githubuser/efcom"
license:             MIT
author:              "Andreas Lynge"
maintainer:          "andreaslyn@gmail.com"
copyright:           "2021 Andreas Lynge"

extra-source-files:
- README.md
- ChangeLog.md

# Metadata used when publishing your package
# synopsis:            Short description of your package
# category:            Web

# To avoid duplicated efforts in documentation and dealing with the
# complications of embedding Haddock markup inside cabal files, it is
# common to point users to the README.md file.
description:         Please see the README on GitHub at <https://github.com/githubuser/efcom#readme>

dependencies:
- base >= 4.7 && < 5
- efcom-plugin

library:
  source-dirs: src
  ghc-options:
  - -O2
  - -fdicts-strict
  - -fplugin=Control.Efcom.Internal.Plugin

executables:
  efcom-exe:
    main:                Main.hs
    source-dirs:         app
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    - -O2
    - -fdicts-strict
    - -fplugin=Control.Efcom.Internal.Plugin
    dependencies:
    - efcom

tests:
  efcom-test:
    main:                Main.hs
    source-dirs:         test
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    - -O2
    - -fdicts-strict
    - -fplugin=Control.Efcom.Internal.Plugin
    dependencies:
    - efcom
    - hspec

benchmarks:
  efcom-bench:
    main: Main.hs
    source-dirs: bench
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    - -O2
    - -fdicts-strict
    - -fplugin=Control.Efcom.Internal.Plugin
    dependencies:
    - efcom
    - transformers
    - mtl
    - criterion
    - CC-delcont

default-extensions:
  - BangPatterns
  - GADTs
  - TypeFamilies
  - ScopedTypeVariables
  - ConstraintKinds
  - DataKinds
  - TypeApplications
  - TypeOperators
  - RankNTypes
  - KindSignatures
  - InstanceSigs
  - MultiParamTypeClasses
  - FlexibleInstances
  - FlexibleContexts
  - MagicHash
  - UnboxedTuples
  - UnboxedSums
  - UnliftedNewtypes
  - GeneralizedNewtypeDeriving
